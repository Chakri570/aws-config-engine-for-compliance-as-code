#
# Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# or in the "license" file accompanying this file. This file is distributed 
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either 
# express or implied. See the License for the specific language governing 
# permissions and limitations under the License.
#

# ===========
# Description
# ===========
# This RuleSet provides guidance on the Security Epics of the AWS Cloud Adoption Framework (CAF). The Security Epics consist of groups of user stories (use cases and abuse cases) that you can work on during sprints. Each of these epics has multiple iterations addressing increasingly complex requirements and layering in robustness. Although we advise the use of agile, the epics can also be treated as general work streams or topics that help in prioritizing and structuring delivery using any other framework. 
#
# This RuleSet has been designed to cover key baseline controls of a multi-account enviroment. It assumes that your AWS deployment AWS is following certain Well-Architected best practices, including but not limited to:
# - Have a centralized Security Logging Account
# - Have a centralized Security Monitoring Account (can be the same)
#
# This RuleSet supports to:
# - classify an Application account by sensitivity (e.g. Sensitive, Confidential, etc.)
# - classify each Rule by criticality to allow prioritization of potential remediation (e.g. CRITICAL, HIGH, etc.)
# - optimizing cost by limiting the number of Rules. This optimization remove the granularity on the Rule Criticality (see above)
#
# The following controls are covered in this template. The controls are organized by Security Epics of the AWS Cloud Adoption Framework:
#
# ==============================
# Identity and Access Management
# ==============================
# | Id  | Name                              | Type    | Criticality |
# | --- | --------------------------------- | ------- | ----------- | 
# | 1.1 | root_no_access                    | Custom  | CRITICAL    |
# | 1.2 | root_mfa_enabled                  | Custom  | CRITICAL    |
# | 1.3 | root_no_access_key                | Custom  | CRITICAL    |
# | 1.4 | iam_policy_no_full_star           | Custom  | HIGH        |
#
# ======================
# Logging and Monitoring
# ======================
# | Id  | Name                                 | Type    | Criticality |
# | --- | ------------------------------------ | ------- | ----------- | 
# | 2.1 | cloudtrail_centralized_encrypted_lfi | Custom  | CRITICAL    |
# | 2.2 | cloudwatch_event_bus_centralized     | Custom  | CRITICAL    |
# | 2.3 | config_enabled_centralized           | Custom  | HIGH        |
#
# =======================
# Infrastructure Security
# =======================
# | Id  | Name                                 | Type    | Criticality |
# | --- | ------------------------------------ | ------- | ----------- | 
# | 3.1 | vpc_securitygroup_default_blocked    | Custom  | MEDIUM      |
# | 3.2 | vpc_no_route_to_igw                  | Custom  | HIGH        |
#
# ===============
# Data Protection
# ===============
# | Id  | Name                              | Type    | Criticality |
# | --- | --------------------------------- | ------- | ----------- | 
# | 4.1 | kms_cmk_rotation_activated        | Custom  | LOW         |
# | 4.2 | s3_bucket_public_read_prohibited  | Managed | CRITICAL    |
# | 4.3 | s3_bucket_public_write_prohibited | Managed | MEDIUM      |
# | 4.4 | s3_bucket_ssl_requests_only       | Managed | HIGH        |
# | 4.5 | ec2_ebs_volume_encrypted          | Managed | MEDIUM      |
# | 4.6 | rds_storage_encrypted             | Managed | HIGH        |
#
# ==========
# Resilience
# ==========
# | Id  | Name                               | Type    | Criticality |
# | --- | ---------------------------------- | ------- | ----------- | 
# | 6.1 | rds_multi_az_enabled               | Managed | HIGH        |
#

AWSTemplateFormatVersion: '2010-09-09'
Description: Setup the CAF Security Baseline RuleSet in Application Account
Parameters:
  CentralizedS3BucketConfigFullName:
    ConstraintDescription: Enter DNS-compliant name
    Description: Bucket name where Config logs are centrally stored. It is located in the Compliance Account.
    Default: centralized-config-112233445566
    MaxLength: 63
    MinLength: 10
    Type: String
  ComplianceAccountId:
    ConstraintDescription: 12 digits, no dashes
    Description: Account ID of the Compliance Account is running from
    Default: 112233445566
    MaxLength: 12
    MinLength: 12
    Type: String
  ComplianceAuditRoleName:
    Description: Role Name of the Compliance Account Cross Account Role
    Default: ComplianceAuditRole-DO-NOT-DELETE
    Type: String

#
# BEGINNING OF THE PARAMETER SECTION TO BE ADAPTED TO YOUR NEEDS
# 

  FullVisibility:
    Description: Create more rules for a granular visibility, including an individual Rule Criticality. Select "false" will reduce cost and reduce the granular visibility.
    Default: true
    AllowedValues:
      - true
      - false
    Type: String  

  DeployDownToCriticality:
    Description: Choose deploy down to which Rule criticality.
    Default: all
    AllowedValues:
      - all
      - critical
      - high
      - medium
    Type: String  
    
  AccountClassification:
    Description: The classification of this AWS account.
    Type: String
    Default: 1-Sensitive
    AllowedValues:
      - 1-Sensitive
      - 2-Confidential
      - 3-Private
      - 4-Public
    ConstraintDescription: "must be one of those 4 values: 1-Sensitive | 2-Confidential | 3-Private | 4-Public"

Conditions:
    Extended: !Equals [ !Ref FullVisibility, true ]
    NotExtended: !Equals [ !Ref FullVisibility, false ]
    Critical: !Or
        - !Equals [ !Ref DeployDownToCriticality, all]
        - !Equals [ !Ref DeployDownToCriticality, critical]
        - !Equals [ !Ref DeployDownToCriticality, high]
        - !Equals [ !Ref DeployDownToCriticality, medium]
    High: !Or
        - !Equals [ !Ref DeployDownToCriticality, all]
        - !Equals [ !Ref DeployDownToCriticality, high]
        - !Equals [ !Ref DeployDownToCriticality, medium]
    Medium: !Or
        - !Equals [ !Ref DeployDownToCriticality, all]
        - !Equals [ !Ref DeployDownToCriticality, medium]
    Low: !Equals [ !Ref DeployDownToCriticality, all]
    CriticalExtended: !And
        - !Condition Critical
        - !Condition Extended
    HighExtended: !And
        - !Condition High
        - !Condition Extended
    MediumExtended: !And
        - !Condition Medium
        - !Condition Extended    
    LowExtended: !And
        - !Condition Low
        - !Condition Extended
    CriticalNotExtended: !And
        - !Condition Critical
        - !Condition NotExtended
    HighNotExtended: !And
        - !Condition High
        - !Condition NotExtended
    MediumNotExtended: !And
        - !Condition Medium
        - !Condition NotExtended    
    LowNotExtended: !And
        - !Condition Low
        - !Condition NotExtended
    
    
#
# END OF THE PARAMETER SECTION TO BE ADAPTED TO YOUR NEEDS
#

Resources:

#
# BEGINNING OF THE RESOURCES SECTION TO BE ADAPTED TO YOUR NEEDS
# Modify your rule set here. Each new Config rule of the ruleSet needs Config Rule creation. For managed rules, modify the Source parameter.
# Add the RuleCriticality in the name of the Rule. For example: 1_CRITICAL | 2_HIGH | 3_MEDIUM | 4_LOW
#

  RuleSetRule1:
    Condition: CriticalNotExtended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 1_CRITICAL-Identity_and_Access_Management
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', Identity_and_Access_Management ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetRule2:
    Condition: CriticalNotExtended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 1_CRITICAL-Logging_and_Monitoring
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', Logging_and_Monitoring ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetRule3:
    Condition: HighNotExtended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 2_HIGH-Infrastructure_Security
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', Infrastructure_Security ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetRule3:
    Condition: LowNotExtended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 4_LOW-Data_Protection
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', Data_Protection ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetManagedRuleDP2:
    Condition: Critical
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 1_CRITICAL-DP_4_2-s3_bucket_public_read_prohibited
      Scope:
        ComplianceResourceTypes: 
        - 'AWS::S3::Bucket'
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_PUBLIC_READ_PROHIBITED
    DependsOn: 
    - ConfigurationRecorder
    - DeliveryChannel    

  RuleSetManagedRuleDP3:
    Condition: Medium
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 3_MEDIUM-DP_4_3-s3_bucket_public_write_prohibited
      Scope:
        ComplianceResourceTypes: 
        - 'AWS::S3::Bucket'     
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_PUBLIC_WRITE_PROHIBITED
    DependsOn: 
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetManagedRuleDP4:
    Condition: High
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 2_HIGH-DP_4_4-s3_bucket_ssl_requests_only
      Description: "Checks whether S3 buckets have policies that require requests to use Secure Socket Layer (SSL)."
      Scope:
        ComplianceResourceTypes: 
        - 'AWS::S3::Bucket'     
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_SSL_REQUESTS_ONLY
    DependsOn: 
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetManagedRuleDP5:
    Condition: Medium
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 3_MEDIUM-DP_4_5-ec2_ebs_volume_encrypted
      Scope:
        ComplianceResourceTypes: 
        - 'AWS::EC2::Volume'
      Source:
        Owner: AWS
        SourceIdentifier: ENCRYPTED_VOLUMES
    DependsOn: 
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetManagedRuleDP6:
    Condition: High
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 2_HIGH-DP_4_6-rds_storage_encrypted
      Scope:
        ComplianceResourceTypes: 
        - 'AWS::RDS::DBInstance'
      Source:
        Owner: AWS
        SourceIdentifier: RDS_STORAGE_ENCRYPTED
    DependsOn: 
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetManagedRuleR1:
    Condition: High
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 2_HIGH-R_6_1-rds_multi_az_enabled
      Scope:
        ComplianceResourceTypes: 
        - 'AWS::RDS::DBInstance'
      Source:
        Owner: AWS
        SourceIdentifier: RDS_MULTI_AZ_SUPPORT
    DependsOn: 
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetDetailedRuleIAM1:
    Condition: CriticalExtended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 1_CRITICAL-IAM_1_1-root_no_access
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', Identity_and_Access_Management ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetDetailedRuleIAM2:
    Condition: CriticalExtended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 1_CRITICAL-IAM_1_2-root_mfa_enabled
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', Identity_and_Access_Management ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetDetailedRuleIAM3:
    Condition: CriticalExtended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 1_CRITICAL-IAM_1_3-root_no_access_key
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', Identity_and_Access_Management ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel

  RuleSetDetailedRuleIAM4:
    Condition: HighExtended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 2_HIGH-IAM_1_4-iam_policy_no_full_star
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', Identity_and_Access_Management ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetDetailedRuleLM1:
    Condition: CriticalExtended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 1_CRITICAL-LM_2_1-cloudtrail_centralized_encrypted_lfi
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', Logging_and_Monitoring ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetDetailedRuleLM2:
    Condition: CriticalExtended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 1_CRITICAL-LM_2_2-cloudwatch_event_bus_centralized
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', Logging_and_Monitoring ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetDetailedRuleLM3:
    Condition: HighExtended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 2_HIGH-LM_2_3-config_enabled_centralized
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', Logging_and_Monitoring ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetDetailedRuleLM4:
    Condition: HighExtended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 2_HIGH-LM_2_4-guardduty_enabled_centralized
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', Logging_and_Monitoring ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetDetailedRuleIS1:
    Condition: MediumExtended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 3_MEDIUM-IS_3_1-vpc_securitygroup_default_blocked
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', Infrastructure_Security ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetDetailedRuleIS2:
    Condition: HighExtended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 2_HIGH-IS_3_2-vpc_no_route_to_igw
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', Infrastructure_Security ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel
    
  RuleSetDetailedRuleDP1:
    Condition: LowExtended
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: 4_LOW-DP_4_1-kms_cmk_rotation_activated
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ':', [ 'arn:aws:lambda', !Ref 'AWS::Region', !Ref ComplianceAccountId, 'function', Data_Protection ] ]
        SourceDetails:
        -
          EventSource: 'aws.config'
          MessageType: ScheduledNotification
          MaximumExecutionFrequency: TwentyFour_Hours
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel
    
    
    
#
# END OF THE RESOURCES SECTION TO BE ADAPTED TO YOUR NEEDS
#

  ConfigurationRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Properties:
      RecordingGroup:
        AllSupported: 'True'
        IncludeGlobalResourceTypes: 'True'
      RoleARN: !Join ["", ["arn:aws:iam::", !Ref 'AWS::AccountId', ":role/service-role/AWSConfigRole-DO-NOT-DELETE"]]
    DependsOn:
    - AWSConfigRole

  DeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    Properties:
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: TwentyFour_Hours
      S3BucketName: !Ref CentralizedS3BucketConfigFullName

  AWSConfigRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service: config.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSConfigRole
      Path: /service-role/
      RoleName: AWSConfigRole-DO-NOT-DELETE

  ConfigS3WritePolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      Roles:
      - AWSConfigRole-DO-NOT-DELETE
      PolicyName: !Join
        - '-'
        - - ConfigS3Write
          - !Ref 'AWS::AccountId'
          - !Ref 'AWS::Region'
      PolicyDocument:
        Statement:
        - Action:
          - s3:PutObject
          Effect: Allow
          Resource:
          - !Join [ "", [ "arn:aws:s3:::", !Ref CentralizedS3BucketConfigFullName, "/AWSLogs/", !Ref 'AWS::AccountId', "/*"] ]
          Sid: !Join ["", ["ConfigS3Write", !Ref 'AWS::AccountId'] ]
        Version: 2012-10-17
    DependsOn:
    - AWSConfigRole

  CrossAcountAuditRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Ref ComplianceAuditRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              AWS: !Join ["", ["arn:aws:iam::", !Ref ComplianceAccountId, ":root"]]
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/SecurityAudit'
      - 'arn:aws:iam::aws:policy/CloudWatchEventsReadOnlyAccess'
      - 'arn:aws:iam::aws:policy/AWSCloudTrailReadOnlyAccess'

  CrossAcountAuditRolePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Statement:
          - Action: 'config:PutEvaluations'
            Effect: Allow
            Resource: '*'
        Version: 2012-10-17
      PolicyName: PutEvaluationPolicy
      Roles:
       - !Ref ComplianceAuditRoleName
    DependsOn: CrossAcountAuditRole

  RuleSetReporter:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: Ruleset_Status_Reporter
      InputParameters:
        RoleToAssume: !Ref ComplianceAuditRoleName
        AccountClassification: !Ref AccountClassification
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !Join [ ":", [ 'arn:aws:lambda', !Ref "AWS::Region", !Ref ComplianceAccountId, 'function', Ruleset_Status_Reporter ] ]
        SourceDetails:
        -
          EventSource: "aws.config"
          MaximumExecutionFrequency: One_Hour
          MessageType: ScheduledNotification
    DependsOn:
    - ConfigurationRecorder
    - DeliveryChannel
